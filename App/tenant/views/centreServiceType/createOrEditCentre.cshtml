@model CentreDto
@using Pulsesync.IngoTPCC.CentreApi.Dto;

<div class="portlet light" data-drag="true" id="centreModal">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject">@L("Centre")</span>
        </div>
        <div class="tools pull-right">
            <a class="remove" ng-click="vm.cancel()"></a>
        </div>
    </div>
    <div class="portlet-body form">
        @{
            var attributes = new Dictionary<string, object>();
            attributes.Add("role", "form");
            attributes.Add("id", "centreForm");
            attributes.Add("name", "centreForm");
            attributes.Add("novalidate", "");
            attributes.Add("action", "#");
            attributes.Add("angular-validator-submit", "vm.save()");
            attributes.Add("angular-validator", "");
            attributes.Add("ng-validate", "vm.validationOptions");
        }
        @using (var f = Html.BeginForm(htmlAttributes: new HtmlAttributes(attributes).AddClass("horizontal-form")))
        {
            using (var s = f.BeginSection())
            {
                <div class="portlet-body" style="display: block;">
                    <div class="form-body">
                        <div class="row">
                            <div class="col-md-6">
                                @s.FieldFor(m => m.Name).Attrs(new { ng_model = "vm.centre.name", ng_disabled = "vm.centre.disabled", ng_maxlength = "300", name = "name", required_message = "You must provide a value for Centre Name" })
                            </div>
                            <div class="col-md-6">
                                @s.FieldFor(m => m.Code).Attrs(new { ng_model = "vm.centre.code", ng_disabled = "vm.centre.disabled", ng_maxlength = "6", name = "code", required_message = "You must provide a value for Centre Code" })
                            </div>
                            <div class="col-md-12">
                                @s.FieldFor(m => m.Address).Attrs(new { ng_model = "vm.centre.address", ng_disabled = "vm.centre.disabled", ng_maxlength = "500", name = "address", required_message = "You must provide a value for Address" })
                            </div>
                            <div class="col-md-12">
                                @s.FieldFor(m => m.OrganizationUnitId).AsDropDown().Attrs(new { ng_model = "vm.centre.organizationUnitId", ng_disabled = "vm.isReadOnlyMode", name = "organizationUnitId", repeat = "vm.organizationUnits" })
                            </div>
                            <div class="col-md-12">
                                @s.FieldFor(m => m.Remarks).Attrs(new { ng_model = "vm.centre.remarks", ng_disabled = "vm.centre.disabled", name = "remarks" }).AddClass("form-control animate msd-elastic: \\n;  ng-valid ng-not-empty ng-dirty ng-valid-parse ng-touched")
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="form-actions noborder right">
                <button type="submit" class="btn btn-circle light-grey-pcc btn-outline btn-small" ng-disabled="vm.disableSave"><i class="material-icons ps-btn-material">check</i>Ok</button>
                <button type="button" class="btn btn-circle light-grey-pcc btn-outline btn-small" ng-click="vm.cancel()"><i class="material-icons ps-btn-material">clear</i>Cancel</button>
            </div>
        }
    </div>
</div>
