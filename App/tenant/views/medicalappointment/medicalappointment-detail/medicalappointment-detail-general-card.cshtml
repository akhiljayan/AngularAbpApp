@using Pulsesync.IngoTPCC.MedicalAppointment
@model MedicalAppointmentDto

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            <div class="caption-subject">@L("General")</div>
        </div>
        <div class="actions dropdown inputs" ng-if="vm.mode!='new'">
            <a class="icon-wrapper" ng-if="vm.mode=='view' && vm.permissions.edit" ng-click="vm.mode='edit'">
                <i class="material-icons custom-icon">edit</i>
            </a>
        </div>
        <div class="tools" ng-if="vm.mode!='new'">
            <a class="remove" ng-if="vm.mode=='edit'" ng-click="vm.cancel()"></a>
        </div>
    </div>
    <div class="portlet-body">
        <div ng-switch="vm.mode">
            <div ng-switch-when="new,edit" ng-switch-when-separator=",">
                @{
                    var attrs = new Dictionary<string, object>();
                    attrs.Add("name", "vm.form");
                    attrs.Add("novalidate", "");
                    attrs.Add("angular-validator", "");
                    attrs.Add("angular-validator-submit", "vm.save($event)");
                }

                @using (var f = Html.BeginForm(htmlAttributes: new HtmlAttributes(attrs)))
                {
                    using (var s = f.BeginSection())
                    {
                        <person-ui-select person-id="vm.workingModel.personId" on-select="vm.onPersonChange(personId)" uiselect-disabled="vm.$stateParams.personId || vm.mode!='new'"></person-ui-select>
                        @s.FieldFor(m => m.AppointmentDateTime).Attrs(new { ng_model = "vm.workingModel.appointmentDateTime", allowfuturedate = "true", name = "AppointmentDateTime", data_date_format = "DD-MMM-YYYY hh:mm A", ng_required = "true", required_message = "'You must provide a value for Appointment Date Time'" })
                        @s.FieldFor(m => m.AppointmentTypeId).AsDropDown().Attrs(new { ng_model = "vm.workingModel.appointmentTypeId", ng_change = "vm.onChangeAppointmentType($select.selected)",  name = "AppointmentType" })

                        @s.FieldFor(m => m.SpecialistOutpatientClinicId).AsDropDown().Attrs(new { ng_model = "vm.workingModel.specialistOutpatientClinicId", ng_disabled = "!vm.isAppointmentTypeSOC", name = "SpecialistOutpatientClinic" })

                        @s.FieldFor(m => m.AppointmentLocation).Attrs(new { ng_model = "vm.workingModel.appointmentLocation", name = "AppointmentLocation", ng_maxlength = "4000" }).AddClass("form-control animate msd-elastic: \\n;  ng-valid ng-not-empty ng-dirty ng-valid-parse")

                        @s.FieldFor(m => m.Doctor).Attrs(new { ng_model = "vm.workingModel.doctor", name = "Doctor" })

                        <div class="form-actions pull-right" ng-if="vm.mode!='new'">
                            <button class="linkButton btn-small" type="submit">
                                <i class="material-icons font-18-main v-top">save</i> @L("Save")
                            </button>
                            <button class="linkButton btn-small" type="button" ng-click="vm.cancel()">
                                <i class="material-icons font-18-main v-top">close</i> @L("Cancel")
                            </button>
                        </div>
                    }
                }
            </div>
            <div ng-switch-default>
                @using (var f = Html.BeginForm())
                {
                    using (var s = f.BeginSection())
                    {
                        <div class="form-group form-md-line-input">
                            <div class="form-control remove-border auto-height view-text">{{vm.model.personFullName}}</div>
                            <label class="control-label view-label" for="personId">@L("Person")<span class="required">*</span></label>
                        </div>
                        <div class="form-group form-md-line-input" ng-if="vm.model.isCancelled">
                            <div class="form-control remove-border auto-height view-text">{{vm.model.cancellationReason}}</div>
                            <label class="control-label view-label" for="cancellationReason">@L("CancellationReasonNew")<span class="required">*</span></label>
                        </div>
                        <div class="form-group form-md-line-input">
                            <div class="form-control remove-border auto-height view-text">{{vm.model.appointmentDateTime | date : 'dd-MMM-y hh:mm a'}}</div>
                            <label class="control-label view-label" for="appointmentDateTime">@L("AppointmentDateTime")<span class="required">*</span></label>
                        </div>
                        <div class="form-group form-md-line-input">
                            <div class="form-control remove-border auto-height view-text">{{vm.model.appointmentType.description}}</div>
                            <label class="control-label view-label" for="appointmentTypeId">@L("AppointmentType")</label>
                        </div>
                        <div class="form-group form-md-line-input">
                            <div class="form-control remove-border auto-height view-text">{{vm.model.specialistOutpatientClinic.description}}</div>
                            <label class="control-label view-label" for="specialistOutpatientClinicId">@L("SpecialistOutpatientClinic")</label>
                        </div>
                        <div class="form-group form-md-line-input">
                            <div class="form-control remove-border auto-height view-text">{{vm.model.appointmentLocation}}</div>
                            <label class="control-label view-label" for="appointmentLocation">@L("AppointmentLocation")<span class="required">*</span></label>
                        </div>
                        <div class="form-group form-md-line-input">
                            <div class="form-control remove-border auto-height view-text">{{vm.model.doctor}}</div>
                            <label class="control-label view-label" for="doctor">@L("Doctor")</label>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>